FROM nvidia/cuda:10.1-devel-centos7

# GNU compiler
RUN yum install -y centos-release-scl && \
    yum install -y \
        devtoolset-7-gcc \
        devtoolset-7-gcc-c++ \
        devtoolset-7-gcc-gfortran && \
    rm -rf /var/cache/yum/*
RUN update-alternatives --install /usr/bin/g++ g++ /opt/rh/devtoolset-7/root/usr/bin/g++ 30 && \
    update-alternatives --install /usr/bin/gcc gcc /opt/rh/devtoolset-7/root/usr/bin/gcc 30 && \
    update-alternatives --install /usr/bin/gcov gcov /opt/rh/devtoolset-7/root/usr/bin/gcov 30 && \
    update-alternatives --install /usr/bin/gfortran gfortran /opt/rh/devtoolset-7/root/usr/bin/gfortran 30

ENV LIBRARY_PATH=/opt/rh/devtoolset-7/root/usr/lib/gcc/x86_64-redhat-linux/7:$LIBRARY_PATH

# MKL version 2020.0-088
RUN rpm --import https://yum.repos.intel.com/intel-gpg-keys/GPG-PUB-KEY-INTEL-SW-PRODUCTS-2019.PUB && \
    yum install -y yum-utils && \
    yum-config-manager --add-repo https://yum.repos.intel.com/mkl/setup/intel-mkl.repo && \
    yum install -y \
        intel-mkl-64bit-2020.0-088 && \
    rm -rf /var/cache/yum/*
ENV CPATH=/opt/intel/mkl/include:$CPATH \
    LD_LIBRARY_PATH=/opt/intel/mkl/lib/intel64:/opt/intel/lib/intel64:$LD_LIBRARY_PATH \
    LIBRARY_PATH=/opt/intel/mkl/lib/intel64:/opt/intel/lib/intel64:$LIBRARY_PATH \
    MKLROOT=/opt/intel/mkl


RUN yum install -y \
        ca-certificates \
        make \
        perl \
        wget \
        which && \
    rm -rf /var/cache/yum/*

RUN yum install -y \
        gawk \
        git \
        libgomp1 \
        libopenblas-base \
        libopenblas-dev \
        libopenmpi-dev \
        openmpi-bin \
        openssh-client \
        vim-common \
	xxd \
        zlib1g \
        zlib1g-dev && \
    rm -rf /var/cache/yum/*

#install plumed first
# https://github.com/plumed/plumed2.git
RUN mkdir -p /var/tmp && cd /var/tmp && git clone --single-branch --branch v2.6 https://github.com/plumed/plumed2.git && cd - && \
    cd /var/tmp/plumed2 && \
    ./configure --disable-mpi --prefix=/usr/local/plumed && \
    make -j$(proc) && \
    mkdir -p /usr/local/plumed && \
    cd /var/tmp/plumed2 && \
    make install -j$(proc) prefix=/usr/local/plumed && \
    rm -rf /var/tmp/plumed2
ENV PATH=/usr/local/plumed/bin:$PATH
ENV LIBRARY_PATH=/usr/local/plumed/lib/:$LIBRARY_PATH
ENV LD_LIBRARY_PATH=/usr/local/plumed/lib/:$LD_LIBRARY_PATH
ENV PLUMED_KERNEL=/usr/local/plumed/lib/libplumedKernel.so

# CMake version 3.16.3
RUN yum install -y \
	python3 \
	libblas-dev \
	liblapack-dev &&\
    rm -rf /var/cache/yum/*
RUN mkdir -p /var/tmp && wget -q -nc --no-check-certificate -P /var/tmp https://cmake.org/files/v3.16/cmake-3.16.3-Linux-x86_64.sh && \
    mkdir -p /usr/local && \
    /bin/sh /var/tmp/cmake-3.16.3-Linux-x86_64.sh --prefix=/usr/local --skip-license && \
    rm -rf /var/tmp/cmake-3.16.3-Linux-x86_64.sh
ENV PATH=/usr/local/bin:$PATH


# http://icl.utk.edu/projectsfiles/magma/downloads/magma-2.5.3.tar.gz
RUN mkdir -p /var/tmp && wget -q -nc --no-check-certificate -P /var/tmp http://icl.utk.edu/projectsfiles/magma/downloads/magma-2.5.3.tar.gz && \
    mkdir -p /var/tmp && tar -x -f /var/tmp/magma-2.5.3.tar.gz -C /var/tmp -z && \
    cd /var/tmp/magma-2.5.3 && \
    cp make.inc-examples/make.inc.mkl-gcc make.inc && \
    echo "GPU_TARGET = Kepler Pascal Volta" >> make.inc && \
    CUDADIR=/usr/local/cuda make -j$(nproc) && \
    mkdir -p /usr/local/magma && \
    cd /var/tmp/magma-2.5.3 && \
    CUDADIR=/usr/local/cuda make install prefix=/usr/local/magma && \
    rm -rf /var/tmp/magma-2.5.3 /var/tmp/magma-2.5.3.tar.gz
ENV CPATH=/usr/local/magma/include:$CPATH \
    LD_LIBRARY_PATH=/usr/local/magma/lib:$LD_LIBRARY_PATH \
    LIBRARY_PATH=/usr/local/magma/lib:$LIBRARY_PATH


#https://github.com/dftbplus/dftbplus
RUN mkdir -p /var/tmp && cd /var/tmp/ && git clone https://github.com/dftbplus/dftbplus && \
    cd /var/tmp/dftbplus/utils && \
    echo y | ./get_opt_externals dftd3 && \
    cd /var/tmp/dftbplus && \
    sed -i -e 's/WITH_GPU \".*\" FALSE/WITH_GPU \"\" TRUE/g' config.cmake && \
    sed -i -e 's/WITH_DFTD3 \".*\" FALSE/WITH_DFTD3 \"\" TRUE/g' config.cmake && \
    sed -i -e 's/WITH_PLUMED \".*\" FALSE/WITH_PLUMED \"\" TRUE/g' config.cmake && \
    sed -i -e 's/PLUMED_LIBRARY_DIRS \"" /PLUMED_LIBRARY_DIRS \"\/usr\/local\/plumed\/lib\" /g' sys/gnu.cmake && \
    sed -i -e 's/MAGMA_LIBRARY_DIRS \"" /MAGMA_LIBRARY_DIRS \"\/usr\/local\/magma\/lib\" /g' sys/gnu.cmake && \
    sed -i -e 's/MAGMA_INCLUDE_DIRS \"\/opt\/magma\/include" /MAGMA_INCLUDE_DIRS \"\/usr\/local\/magma\/include\" /g' sys/gnu.cmake && \
    sed -i -e 's/LAPACK_LIBRARIES \".*\" /LAPACK_LIBRARIES \"mkl_intel_lp64\;mkl_gnu_thread\;mkl_core\" /g' sys/gnu.cmake && \
    sed -i -e 's/LAPACK_LIBRARY_DIRS \"" /LAPACK_LIBRARY_DIRS \"\$ENV\{MKLROOT\}\/lib\/intel64\" /g' sys/gnu.cmake && \
    sed -i -e 's/OTHER_INCLUDE_DIRS \"" /OTHER_INCLUDE_DIRS \"\/usr\/local\/cuda\/include" /g ' sys/gnu.cmake && \
    #sed -i -e 's/^\(LIB_LAPACK +=\).*/\1 -Wl,--no-as-needed -lmkl_intel_lp64 -lmkl_gnu_thread -lmkl_core -lgomp -lpthread -lm -ldl/g' make.arch && \ #not sure where to add this flag
    CUDADIR=/usr/local/cuda && \
    mkdir -p /usr/local/dftb && \
    cd /var/tmp/dftbplus && \
    mkdir _build && \
    cd _build && \
    cmake -DCMAKE_TOOLCHAIN_FILE=../sys/gnu.cmake .. && \
    make -j$(nproc) && \	
    make install && \
    cp -rf /var/tmp/dftbplus/_build/_install/bin /usr/local/dftb/ && \	
    rm -rf /var/tmp/dftbplus 
ENV PATH=/usr/local/dftb/bin:$PATH


